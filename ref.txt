def fit(self, X, n_clusters):
        start_time = time.time()
        
        np.random.seed(self.random_state)
        self.centroids = X[np.random.choice(X.shape[0], n_clusters, replace=False)]
        self.centroids = self.centroids / np.linalg.norm(self.centroids, axis=1, keepdims=True)
        
        for iteration in range(self.max_iter):
            clusters = self._assign_clusters(X)
            new_centroids = self._update_centroids(X, clusters)
            
            if np.allclose(self.centroids, new_centroids, atol=1e-5):
                print(f"Converged after {iteration + 1} iterations")
                break
            
            self.centroids = new_centroids
            print(f"Completed iteration {iteration + 1}")
        
        self._populate_hash_table(X, clusters)
        
        end_time = time.time()
        self.time_complexity.append(end_time - start_time)
        self.space_complexity.append(self._calculate_space_complexity())